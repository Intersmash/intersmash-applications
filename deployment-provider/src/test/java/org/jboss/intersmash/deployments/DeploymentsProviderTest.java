package org.jboss.intersmash.deployments;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import java.nio.file.Files;
import java.nio.file.Path;

import static org.junit.jupiter.api.Assertions.*;

/**
 * Verify {@link DeploymentsProvider} is able to expose application deliverables, e.g.: WAR deployments, provisioned
 * WildFly/EAP 8.x server directory, etc.
 */
class DeploymentsProviderTest {

    /**
     * Verify that a provisioned server generated by the WidFly/EAP 8.x Maven plugin for the
     * {@code wildfly-microprofile-reactive-messaging-kafka} application exists
     */
    @Test
    void wildflyMicroprofileReactiveMessagingKafkaProvisionedServer_exists() {
        Path appPath = null;
        try {
            appPath = DeploymentsProvider.wildflyMicroprofileReactiveMessagingKafkaProvisionedServerPath();
        } catch(Throwable e) {
            fail(e);
        }
        assertPathExist(appPath);
    }

    /**
     * Verify that a WAR deployment for the {@code wildfly-microprofile-reactive-messaging-kafka} application exists
     */
    @Test
    void wildflyMicroprofileReactiveMessagingKafkaDeployment_exists() {
        Path appPath = null;
        try {
            appPath = DeploymentsProvider.wildflyMicroprofileReactiveMessagingKafkaDeploymentPath();
        } catch(Throwable e) {
            fail(e);
        }
        assertPathExist(appPath);
    }

    private static void assertPathExist(final Path path) {
        Assertions.assertNotNull(path);
        Assertions.assertTrue(Files.exists(path));
    }
}